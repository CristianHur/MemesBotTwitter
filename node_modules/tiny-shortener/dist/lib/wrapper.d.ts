interface Wrapper {
    readonly api: string;
    readonly url: string;
    readonly alias?: string;
}
/**
 * Handles the request to shorter a URL
 *
 * @param api The api URL end point
 * @param url The URL to be shortened
 * @param alias The provided alias to be used
 * @example
 * wrapper({ api: 'www.foo.com', url: 'bar.com' });
 * @example
 * wrapper({ api: 'www.foo.com', url: 'bar.com', alias: 'baz' });
 * @returns The URL shortened
 * @returns A promise containing the HTML page from tinyurl
 */
export declare const getAPI: ({ api, url, alias }: Wrapper) => Promise<string>;
/**
 * Wraps up the request to shorter a URL
 *
 * @param api The api URL end point
 * @param url The URL to be shortened
 * @param alias The provided alias to be used
 * @example
 * wrapper({ api: 'www.foo.com', url: 'bar.com' });
 * @example
 * wrapper({ api: 'www.foo.com', url: 'bar.com', alias: 'baz' });
 * @returns The URL shortened
 */
export declare const wrapper: ({ api, url, alias }: Wrapper) => Promise<string>;
export {};
