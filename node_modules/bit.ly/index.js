/*
	bit.ly - Module for bit.ly URL shortener API
*/
var http=require('http');
var url=require('url');


/* constructor */

var BitLy = function(username,apikey){

	this.config={
		username:username,
		apikey:apikey
	};


	return this;
}


/* API request */

BitLy.prototype.request=function(params,action,callback){


	var requrl = url.format({
			protocol:'http:',
			host:'api.bit.ly',
			pathname:'/v3/'+action+'/',
			query:params
	  });


	http.get(requrl,function(res){
		data=[]

		res
		.on('data',function(chunk){
			data.push(chunk);
		})
		.on('end',function(){
			response=data.join('').trim();
			//console.log(response);
			callback(JSON.parse(response));

		})

	});

}

/* check URL*/

BitLy.prototype.validateURL=function(url) {
    return /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(url);
}


/* shorten long URL */

BitLy.prototype.shorten=function(longurl,callback){

	var params={
		login:this.config.username,
		apiKey:this.config.apikey,
		longUrl:longurl
	};

	

	if(this.validateURL(longurl)){

		this.request(params,'shorten',function(res){				

		if(res.data.url){
			callback(null,res.data.url);		
		}else{
			callback("error accessing bit.ly",null);
		}

		});

	}else{
		callback("invalid URL",null);
	}


}

/* shorten long URL */

BitLy.prototype.expand=function(shorturl,callback){

	var params={
		login:this.config.username,
		apiKey:this.config.apikey,
		shortUrl:shorturl
	};

	if(this.validateURL(shorturl)){

		this.request(params,'expand',function(res){	

		if(res.data.expand[0]['error']){
			callback("invalid short url",null);		

		}else{
			callback(null,res.data['expand'][0]['long_url']);		
	
		}

		});

	}else{
		callback("invalid URL",null);
	}


}


module.exports=BitLy;